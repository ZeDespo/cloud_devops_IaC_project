Description:
    Alex Despotakis
    Cloud DevOps Engineering Part 2 Project

    This template seeks to replicate the schematics described in aws_diagram.png
    All of the resources are listed in alphabetical order by type and by name

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to a resource
        Type: String

    VpcCIDR:
        Description: Enter the IP range in CIDR notation for the VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: IP range in CIDR notation for public subnet in VPC
        Type: String
        Default: 10.0.0.0/24

    PublicSubnet2CIDR:
        Description: IP range in CIDR notation for public subnet in VPC
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: IP range in CIDR notation for private subnet in VPC
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: IP range in CIDR notation for private subnet in VPC
        Type: String
        Default: 10.0.3.0/24


Resources:

    # Configure the autoscaling groups
    # In case the server gets overloaded, we're giving AWS instructions on what to do to help the other server in need
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            -   Fn::ImportValue:
                    Fn::Sub:
                        ${EnvironmentName}-PRIV-NETS
            LaunchConfigurationName: !Ref WebAppLaunchConfig
            MinSize: 4
            MaxSize: 8

    # Necessary launch configuration for autoscaling group
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId: ami-06d51e91cea0dac8d  # Ubuntu server
            IamInstanceProfile:
                Fn::ImportValue: !Sub ${EnvironmentName}-S3ReadAccessForEC2
            SecurityGroups:
            -   !Ref UdagramEC2SG
            InstanceType: t3.medium
            BlockDeviceMappings:
            -   DeviceName: "/dev/sdk"
                Ebs:
                    VolumeSize: '10'
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    apt-get update -y
                    apt-get install unzip awscli -y
                    apt-get install apache2 -y
                    systemctl start apache2.service
                    cd /var/www/html
                    aws s3 cp s3://udacity-demo-1/udacity.zip .
                    unzip -o udacity.zip

    # Security group for the EC2 web servers
    UdagramEC2SG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow inbound HTTP traffic, outbound all traffic for updates
            VpcId:
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            -   IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            -   IpProtocol: -1
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0


Outputs:

    WebServers:
        Description: The webservers in the autoscaling group
        Value: !Ref WebAppGroup
        Export:
            Name: !Sub ${EnvironmentName}-EC2-AutoScalingGroup

    WebServerSG:
        Description: The webservers' security group
        Value: !Ref UdagramEC2SG
        Export:
            Name: !Sub ${EnvironmentName}-EC2-SecurityGroup